on:
  workflow_call:
    inputs:
      application-name:
        description: 'Microservice Name to build'
        required: true
        type: string
      image-tag:
        description: 'Docker image tag'
        required: true
        type: string
      repository:
        description: 'ECR repository name'
        required: true
        type: string
    secrets:
      aws-access-key-id:
        description: 'AWS key id'
        required: true
      aws-secret-access-key:
        description: 'AWS key secret'
        required: true

jobs:
  print-service-name:
    name: Deploy on Kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: Print Service Name
        run: echo service is ${{ inputs.application-name }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build the docker-compose stack
        run: docker-compose -f ${{ inputs.application-name }}_microservice/docker-compose.yml up -d app

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.repository }}
          IMAGE_TAG: ${{ inputs.image-tag }}
        run: |
          docker tag app ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY}}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY}}:${{ env.IMAGE_TAG }}
      - name: Set up Kubectl
        run: |-
          curl -sfLo kubectl https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl
          chmod u+x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
      - name: Deploy EKS
        env:
          KUBERNETES_CLUSTER_NAME: k8s_platform_edu
          KUBERNETES_NAMESPACE: items_service
          HELM_RELEASE_NAME: items
        shell: bash
        run: |
          export KUBECONFIG=${{ secret.kubeconfig }}
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin
          /usr/local/bin/eksctl utils write-kubeconfig --kubeconfig .kubeconfig --cluster ${KUBERNETES_CLUSTER_NAME} --region us-east-2
          kubectl rollout status deploy -n ${KUBERNETES_NAMESPACE} ${HELM_RELEASE_NAME}