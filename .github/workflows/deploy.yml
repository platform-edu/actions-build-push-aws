on:
  workflow_call:
    inputs:
      application-name:
        description: 'Microservice Name to build'
        required: true
        type: string
    secrets:
      aws-access-key-id:
        description: 'AWS key id'
        required: true
      aws-secret-access-key:
        description: 'AWS key secret'
        required: true

jobs:
  print-service-name:
    name: Deploy on Kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: Print Service Name
        run: echo service is ${{ inputs.application-name }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Docker cache layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx   
      - name: Build & Push Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.RELEASE_REVISION }}
        run: |
          docker buildx create --use
      
          docker buildx build \                                
            --cache-from=type=local,src=/tmp/.buildx-cache \   
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            --tag ${{ env.RELEASE_IMAGE }} \                           
            --target release \                                 
            --push \                                           
            .                                                  
      
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache